agecats
write.csv(agecats, file = "/tmp/age_cats_final_test.csv")
agecats_old <- read.csv("/tmp/age_cats.csv")
View(agecats)
sd(iss_f$dist_cycle_go[sel2])
iss_f$dist_cycle_go
iss_f$dist_cycle_go[sel2]
sel2
agecats <- data.frame(age = levels(iss$age), not_cycled = NA, mean_dis = NA, mean_dis_cyclists = NA, sd_dis_cyclists = NA, not_cycled_dft = NA, mean_dis_dft = NA, mean_dis_cyclists_dft = NA, sd_dis_cyclists_dft = NA, not_cycled_go_dutch = NA, mean_dis_go_dutch = NA, mean_dis_cyclists_go_dutch = NA, sd_dis_cyclists_go_dutch = NA)
# run the calculations
for(i in levels(iss$age)){
sel <- which(iss$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss$dist_cycle[sel])
sel2 <- sel[iss$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss$dist_cycle_dft[sel])
sel2 <- sel[ iss$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss$dist_cycle_dft[sel2])
}
# Add gender, first with names
mnames <- paste0(names(agecats)[-1], "_m")
fnames <- paste0(names(agecats)[-1], "_f")
# Subset the population
iss_m <- iss[ iss$sex == "Male", ]
iss_f <- iss[ iss$sex == "Female", ]
for(i in levels(iss_m$age)){
sel <- which(iss_m$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_m$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_m$dist_cycle[sel])
sel2 <- sel[iss_m$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_m$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_m$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss_m$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss_m$dist_cycle_dft[sel])
sel2 <- sel[ iss_m$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss_m$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss_m$dist_cycle_dft[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_m$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel])
sel2 <- sel[ iss_m$dist_cycle_go [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_m$dist_cycle_go[sel2])
}
agecats_m <- agecats
names(agecats_m)[-1] <- mnames
# Now for females
for(i in levels(iss_f$age)){
sel <- which(iss_f$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_f$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_f$dist_cycle[sel])
sel2 <- sel[iss_f$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_f$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_f$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss_f$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss_f$dist_cycle_dft[sel])
sel2 <- sel[ iss_f$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss_f$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss_f$dist_cycle_dft[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_f$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel])
sel2 <- sel[ iss_f$dist_cycle_go[sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_f$dist_cycle_go[sel2])
}
agecats_f <- agecats
names(agecats_f)[-1] <- fnames
agecats <- cbind(agecats_m, agecats_f[-1])
agecats
write.csv(agecats, file = "/tmp/age_cats_final_test.csv")
agecats_old <- read.csv("/tmp/age_cats.csv")
agecats$mean_dis_cyclists_go_dutch_m - agecats_old$mean_dis_cyclists_go_dutch_m
write.csv(agecats, file = "/tmp/age_cats_final_test.csv")
agecats_old <- read.csv("/tmp/age_cats.csv")
agecats$mean_dis_cyclists_go_dutch_m - agecats_old$mean_dis_cyclists_go_dutch_m
agecats_old$mean_dis_cyclists_go_dutch_m
agecats_old$mean_dis_cyclists_dft_m
agecats$mean_dis_cyclists_dft_m
levels(agecats$age)
levels(tsam$age)
tsam <- tsam[1:nrow(tsam),]
individuals <- group_by(tsam, psuid, i1, house )
indscen <- summarise(individuals, dist_cycle = sum(dcycle), dist_cycle_dft = sum(dcycle_2025_dft), dist_cycle_go = sum(dcycle_2025_go)) # the saving per person
summary(indscen)
summary(indscen$dist_cycle)
summary(indscen$dist_cycle_go)
summary(indscen$dist_cycle[ indscen$dist_cycle > 0])
indscen_all <- inner_join(ind, indscen) # join other attributes to individ. data
iss <- indscen_all[4000:5000,]
# write.csv(iss, "~/Dropbox/energy_saving.csv")
summary(iss)
indscen_all$age <- age_recat(indscen_all)
head(indscen_all)
head(indscen_all$age)
indscen_all$age <- age_recat(indscen_all$age)
iss <- indscen_all[4000:5000,]
# write.csv(iss, "~/Dropbox/energy_saving.csv")
summary(iss)
# Percentage in each group
length(which(iss$dist_cycle_go == 0)) / nrow(iss) # the overall percentage
agecats <- data.frame(age = levels(iss$age), not_cycled = NA, mean_dis = NA, mean_dis_cyclists = NA, sd_dis_cyclists = NA, not_cycled_dft = NA, mean_dis_dft = NA, mean_dis_cyclists_dft = NA, sd_dis_cyclists_dft = NA, not_cycled_go_dutch = NA, mean_dis_go_dutch = NA, mean_dis_cyclists_go_dutch = NA, sd_dis_cyclists_go_dutch = NA)
# run the calculations
for(i in levels(iss$age)){
sel <- which(iss$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss$dist_cycle[sel])
sel2 <- sel[iss$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss$dist_cycle_dft[sel])
sel2 <- sel[ iss$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss$dist_cycle_dft[sel2])
}
# Add gender, first with names
mnames <- paste0(names(agecats)[-1], "_m")
fnames <- paste0(names(agecats)[-1], "_f")
# Subset the population
iss_m <- iss[ iss$sex == "Male", ]
iss_f <- iss[ iss$sex == "Female", ]
for(i in levels(iss_m$age)){
sel <- which(iss_m$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_m$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_m$dist_cycle[sel])
sel2 <- sel[iss_m$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_m$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_m$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss_m$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss_m$dist_cycle_dft[sel])
sel2 <- sel[ iss_m$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss_m$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss_m$dist_cycle_dft[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_m$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel])
sel2 <- sel[ iss_m$dist_cycle_go [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_m$dist_cycle_go[sel2])
}
agecats_m <- agecats
names(agecats_m)[-1] <- mnames
# Now for females
for(i in levels(iss_f$age)){
sel <- which(iss_f$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_f$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_f$dist_cycle[sel])
sel2 <- sel[iss_f$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_f$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_f$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss_f$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss_f$dist_cycle_dft[sel])
sel2 <- sel[ iss_f$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss_f$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss_f$dist_cycle_dft[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_f$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel])
sel2 <- sel[ iss_f$dist_cycle_go[sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_f$dist_cycle_go[sel2])
}
agecats_f <- agecats
names(agecats_f)[-1] <- fnames
agecats <- cbind(agecats_m, agecats_f[-1])
agecats
write.csv(agecats, file = "/tmp/age_cats_final_test.csv")
agecats$mean_dis_cyclists_dft_m - agecats_old$mean_dis_cyclists_dft_m
agecats$mean_dis_cyclists_dft_m
agecats
agecats_old
agecats$not_cycled_go_dutch_m - agecats_old$not_cycled_go_dutch_m
cbind(agecats$age, agecats$not_cycled_go_dutch_m - agecats_old$not_cycled_go_dutch_m)
cbind(as.character(agecats$age), agecats$not_cycled_go_dutch_m - agecats_old$not_cycled_go_dutch_m)
View(agecats)
iss <- indscen_all
# iss <- indscen_all
# write.csv(iss, "~/Dropbox/energy_saving.csv")
summary(iss)
# Percentage in each group
length(which(iss$dist_cycle_go == 0)) / nrow(iss) # the overall percentage
agecats <- data.frame(age = levels(iss$age), not_cycled = NA, mean_dis = NA, mean_dis_cyclists = NA, sd_dis_cyclists = NA, not_cycled_dft = NA, mean_dis_dft = NA, mean_dis_cyclists_dft = NA, sd_dis_cyclists_dft = NA, not_cycled_go_dutch = NA, mean_dis_go_dutch = NA, mean_dis_cyclists_go_dutch = NA, sd_dis_cyclists_go_dutch = NA)
# run the calculations
for(i in levels(iss$age)){
sel <- which(iss$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss$dist_cycle[sel])
sel2 <- sel[iss$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss$dist_cycle_dft[sel])
sel2 <- sel[ iss$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss$dist_cycle_dft[sel2])
}
# Add gender, first with names
mnames <- paste0(names(agecats)[-1], "_m")
fnames <- paste0(names(agecats)[-1], "_f")
# Subset the population
iss_m <- iss[ iss$sex == "Male", ]
iss_f <- iss[ iss$sex == "Female", ]
for(i in levels(iss_m$age)){
sel <- which(iss_m$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_m$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_m$dist_cycle[sel])
sel2 <- sel[iss_m$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_m$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_m$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss_m$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss_m$dist_cycle_dft[sel])
sel2 <- sel[ iss_m$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss_m$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss_m$dist_cycle_dft[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_m$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel])
sel2 <- sel[ iss_m$dist_cycle_go [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_m$dist_cycle_go[sel2])
}
agecats_m <- agecats
names(agecats_m)[-1] <- mnames
# Now for females
for(i in levels(iss_f$age)){
sel <- which(iss_f$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_f$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_f$dist_cycle[sel])
sel2 <- sel[iss_f$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_f$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_f$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss_f$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss_f$dist_cycle_dft[sel])
sel2 <- sel[ iss_f$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss_f$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss_f$dist_cycle_dft[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_f$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel])
sel2 <- sel[ iss_f$dist_cycle_go[sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_f$dist_cycle_go[sel2])
}
agecats_f <- agecats
names(agecats_f)[-1] <- fnames
agecats <- cbind(agecats_m, agecats_f[-1])
agecats
write.csv(agecats, file = "/tmp/age_cats_final_test.csv")
nrow(iss)
write.csv(agecats, file = "/tmp/age_cats_final.csv")
write.csv(agecats, file = "/tmp/age_cats_final_2025.csv")
summary(indall$region)
head(indscen_all)
names(indscen_all)
summary(indscen_all$wplace)
head(indscen_all[c("poss_home", "fhome")])
head(indlst[[1]])
head(indlst$i423)
names(tsam)
# most common factor in variable
commonest <- function(f){
tt <- table(f)
names(tt[which.max(tt)])
}
indscen <- summarise(individuals, GOR = commonest(GOR) dist_cycle = sum(dcycle), dist_cycle_dft = sum(dcycle_2025_dft), dist_cycle_go = sum(dcycle_2025_go)) # the saving per person
indscen <- summarise(individuals, GOR = commonest(GOR), dist_cycle = sum(dcycle), dist_cycle_dft = sum(dcycle_2025_dft), dist_cycle_go = sum(dcycle_2025_go)) # the saving per person
library(dplyr)
tsam <- tsam[1:nrow(tsam),]
individuals <- group_by(tsam, psuid, i1, house )
head(tsam$region)
indscen <- summarise(individuals, GOR = commonest(region), dist_cycle = sum(dcycle), dist_cycle_dft = sum(dcycle_2025_dft), dist_cycle_go = sum(dcycle_2025_go)) # the saving per person
summary(indscen)
summary(indscen$dist_cycle)
summary(indscen$dist_cycle_go)
summary(indscen$dist_cycle[ indscen$dist_cycle > 0])
indscen$GOR <- factor(indscen$GOR)
summary(indscen$GOR)
indscen <- indscen[ !indscen$GOR == "Scotland", ]
indscen_all <- inner_join(indscen, ind) # join other attributes to individ. data
indscen_all$age <- age_recat(indscen_all$age)
iss <- indscen_all
# write.csv(iss, "~/Dropbox/energy_saving.csv")
summary(iss)
# Percentage in each group
length(which(iss$dist_cycle_go == 0)) / nrow(iss) # the overall percentage
summary(iss$age)
agecats <- data.frame(age = levels(iss$age), not_cycled = NA, mean_dis = NA, mean_dis_cyclists = NA, sd_dis_cyclists = NA, not_cycled_dft = NA, mean_dis_dft = NA, mean_dis_cyclists_dft = NA, sd_dis_cyclists_dft = NA, not_cycled_go_dutch = NA, mean_dis_go_dutch = NA, mean_dis_cyclists_go_dutch = NA, sd_dis_cyclists_go_dutch = NA)
# run the calculations
for(i in levels(iss$age)){
sel <- which(iss$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss$dist_cycle[sel])
sel2 <- sel[iss$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss$dist_cycle_dft[sel])
sel2 <- sel[ iss$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss$dist_cycle_dft[sel2])
}
# Add gender, first with names
mnames <- paste0(names(agecats)[-1], "_m")
fnames <- paste0(names(agecats)[-1], "_f")
# Subset the population
iss_m <- iss[ iss$sex == "Male", ]
iss_f <- iss[ iss$sex == "Female", ]
for(i in levels(iss_m$age)){
sel <- which(iss_m$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_m$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_m$dist_cycle[sel])
sel2 <- sel[iss_m$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_m$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_m$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss_m$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss_m$dist_cycle_dft[sel])
sel2 <- sel[ iss_m$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss_m$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss_m$dist_cycle_dft[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_m$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel])
sel2 <- sel[ iss_m$dist_cycle_go [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_m$dist_cycle_go[sel2])
}
agecats_m <- agecats
names(agecats_m)[-1] <- mnames
# Now for females
for(i in levels(iss_f$age)){
sel <- which(iss_f$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_f$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_f$dist_cycle[sel])
sel2 <- sel[iss_f$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_f$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_f$dist_cycle[sel2])
agecats$not_cycled_dft[agecats$age == i] <- sum(iss_f$dist_cycle_dft[sel] == 0) / length(sel)
agecats$mean_dis_dft[agecats$age == i] <- mean(iss_f$dist_cycle_dft[sel])
sel2 <- sel[ iss_f$dist_cycle_dft [sel] > 0] # cyclists
agecats$mean_dis_cyclists_dft[agecats$age == i] <- mean(iss_f$dist_cycle_dft[sel2])
agecats$sd_dis_cyclists_dft[agecats$age == i] <- sd(iss_f$dist_cycle_dft[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_f$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel])
sel2 <- sel[ iss_f$dist_cycle_go[sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_f$dist_cycle_go[sel2])
}
agecats_f <- agecats
names(agecats_f)[-1] <- fnames
agecats <- cbind(agecats_m, agecats_f[-1])
agecats
write.csv(agecats, file = "/tmp/age_cats_final_2025.csv")
summary(tsam$age)
summary(ind$i2)
summary(ind$age)
agecats
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = dfline, aes(x = Year, y = prop.cycle, color = model)) + geom_point(data = dfdots, aes(x = Year, y = prop.cycle, shape = model)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(px, py, label = ptext), size = 4)
```
```{r}
load("df2050.Rdata")
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = dfline, aes(x = Year, y = prop.cycle, color = model)) + geom_point(data = dfdots, aes(x = Year, y = prop.cycle, shape = model)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(px, py, label = ptext), size = 4)
library(ggplot2)
load("df2050.Rdata")
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = dfline, aes(x = Year, y = prop.cycle, color = model)) + geom_point(data = dfdots, aes(x = Year, y = prop.cycle, shape = model)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(px, py, label = ptext), size = 4)
library(ggplot2)
load("df2050.Rdata")
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = dfline, aes(x = Year, y = prop.cycle, color = model)) + geom_point(data = dfdots, aes(x = Year, y = prop.cycle, shape = model)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(px, py, label = ptext), size = 4)
head(df2050)
dfline
9.688571      -  10.354286
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none")
s2050 <- rbind(dft, slow_start, go_dutch)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none")
sum(tsam$dkm < 5 * 1.61)
sum(tsam$dkm < 5 * 1.61) / nrow(tsam)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none") +
scale_color_brewer(type = "qual", palette = 3)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none") +
scale_color_brewer(type = "qual", palette = 2)
=
=
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none") +
scale_color_brewer(type = "qual", palette = 4)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none") +
scale_color_brewer(type = "qual", palette = 5)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none") +
scale_color_brewer(type = "qual", palette = 6)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none")
head(tsam)
dfline
s1[1]
s1[1] - s1[2]
(s1[1] - s1[2]) * 50
View(`s2050`)
summary(tsam$region)
summary(ssam$j58g)
summary(tsam$region)
tsam$region <- factor(tsam$region)
summary(tsam$region)
levels(tsam$region)
region <- data.frame(GOR = levels(tsam$region), nts_pop <- summary(tsam$region))
region
region <- data.frame(GOR = levels(tsam$region), nts_pop = summary(tsam$region))
region
region <- data.frame(GOR = levels(tsam$region), nts_pop = as.numeric(summary(tsam$region)))
region
region <- data.frame(GOR = levels(tsam$region), nts_pop = as.numeric(summary(tsam$region)), rate_current = NA, rate_2025_dft = NA, rate_go_2025 = NA)
1:length(tsam$region)
1:length(levels(tsam$region))
1:nrow(region)
nrow(tsam) * 0.017 #
size
size = length(which(tsam$mode == "Bicycle")) # the number of people who will switch mode
size
region <- data.frame(GOR = levels(tsam$region), nts_pop = as.numeric(summary(tsam$region)), rate_current = NA, rate_2025_dft = NA, rate_go_2025 = NA)
library(dplyr)
byGOR <- group_by(tsam, region)
summarise(byGOR, sum(mode == "Bicycle"))
summarise(byGOR, rate = sum(mode == "Bicycle") / n())
aggregate(mode ~ region, FUN = function(x) sum(x == "Bicycle") /  length(x))
aggregate(mode ~ region, FUN = function(x) sum(x == "Bicycle") /  length(x), data = tsam)
summarise(byGOR, rate = sum(mode == "Bicycle") / n())
names(tsam)
summarise(byGOR, rate = sum(dswitch_2025_dft == "Bicycle") / n()) # much much faster
names(tsam)
summarise(byGOR, rate = mean(dkm)) # strange - London still lagging
tchange
tchange <- rbind(
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dswitch == "Bicycle"]),
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dmswitch == "Bicycle"]))/
length(which(bike)) * 100
tchange <- round(tchange, 1)
tchange <- cbind(c("Distance", "Distance + Modes"), tchange)
tchange
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dswitch == "Bicycle"])
summary(tsam$mode[tsam$mode != "Bicycle" & tsam$dswitch_2025_dft == "Bicycle"])
length(tsam$mode[tsam$mode != "Bicycle" & tsam$dswitch_2025_dft == "Bicycle"])
summary(tsam$mode[tsam$mode != "Bicycle" & tsam$dswitch_2025_dft == "Bicycle"]) /
length(tsam$mode[tsam$mode != "Bicycle" & tsam$dswitch_2025_dft == "Bicycle"])
replacement_2025_dft <- summary(tsam$mode[tsam$mode != "Bicycle" & tsam$dswitch_2025_dft == "Bicycle"]) /
length(tsam$mode[tsam$mode != "Bicycle" & tsam$dswitch_2025_dft == "Bicycle"])
replacement_2025_dft <- summary(tsam$mode[tsam$mode != "Bicycle" & tsam$dswitch_2025_dft == "Bicycle"]) /
length(tsam$mode[tsam$mode != "Bicycle" & tsam$dswitch_2025_dft == "Bicycle"])
replacement_2025_go <- summary(tsam$mode[tsam$mode != "Bicycle" & tsam$dswitch_2025_go == "Bicycle"]) /
length(tsam$mode[tsam$mode != "Bicycle" & tsam$dswitch_2025_go == "Bicycle"])
rbind(replacement_2025_dft, replacement_2025_go)
summary(tsam$mode)
rbind(replacement_2025_dft, replacement_2025_go, summary(tsam$mode))
rbind(replacement_2025_dft, replacement_2025_go, summary(tsam$mode) / nrow(tsam))
replacement <- rbind(replacement_2025_dft, replacement_2025_go, summary(tsam$mode) / nrow(tsam))
replacement <- melt(replacement)
library(reshape2)
replacement <- melt(replacement)
head(repl)
head(replacement)
replacement <- rbind(DfT = replacement_2025_dft, Go_Dutch = replacement_2025_go, Current = summary(tsam$mode) / nrow(tsam))
replacement <- rbind(DfT = replacement_2025_dft, Go_Dutch = replacement_2025_go, Current = summary(tsam$mode) / nrow(tsam))
library(reshape2)
replacement <- melt(replacement)
head(replacement)
r
r <- melt(replacement)
names(replacement) <- c("Scenario", "Mode", "Proportion")
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement)
library(ggplot2)
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement)
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "bar")
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "barplot")
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "bar", stat = "identity")
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge")
replacement$Proportion <- replacement$Proportion * 100
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge")
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme(text.axis.x = element_text(angle = 45))
?theme
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme(axis.text.x = element_text(angle = 45))
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme(axis.text.x = element_text(angle = 20))
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme(axis.text.x = element_text(angle = 17))
names(replacement) <- c("Scenario", "Mode", "Percentage")
replacement$Proportion <- replacement$Proportion * 100
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme(axis.text.x = element_text(angle = 17))
replacement$Percentage <- replacement$Percentage * 100
qplot(x = Mode, y = Proportion, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme(axis.text.x = element_text(angle = 17)) + theme_classic()
qplot(x = Mode, y = Percentage, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme(axis.text.x = element_text(angle = 17)) + theme_classic()
qplot(x = Mode, y = Percentage, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme_classic() + theme(axis.text.x = element_text(angle = 17))
qplot(x = Mode, y = Percentage, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme_classic() + theme(axis.text.x = element_text(angle = 10))
replacement <- rbind(DfT = replacement_2025_dft, Go_Dutch = replacement_2025_go, Current = summary(tsam$mode) / nrow(tsam))
library(reshape2)
replacement <- melt(replacement)
head(replacement)
names(replacement) <- c("Scenario", "Mode", "Percentage")
replacement$Percentage <- replacement$Percentage * 100
qplot(x = Mode, y = Percentage, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme_classic() + theme(axis.text.x = element_text(angle = 10))
qplot(x = Mode, y = Percentage, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme_classic() + theme(axis.text.x = element_text(angle = 10)) + ylab("% of modes replaced by bicycle")
qplot(x = Mode, y = Percentage, fill = Scenario, data = replacement, geom = "bar", stat = "identity", position = "dodge") + theme_classic() + theme(axis.text.x = element_text(angle = 10))
ggsave("figures/perc_replaced.png")
library(grid)
grid.raster(readPNG("figures/perc_replaced.png"))
library(png)
