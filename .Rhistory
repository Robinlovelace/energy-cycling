df2050 <- rbind(df2050, lgrowth)
ptext <- c("GBC 2025 target", "GBC 2050 target")
px <- c(2007, 2007)
py <- c(10.8, 25.8)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_point(data = df2050, aes(x = Year, y = prop.cycle, color = model)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Data/model") + geom_text(aes(px, py, label = ptext), size = 4)
# after adding edited data
(ntpy <- read.csv("nts/ntpm-final.csv")[,c(2,5)])
ntpy$Source <- "NTS"
names(ntpy) <- c("Year", "prop.cycle", "Source")
# qplot(data=ntpy, x=Year, y=prop.cycle * 100, color = Source) + geom_smooth(fill=NA) +
#   ylim(c(0,2)) + theme_bw() + ylab("Percentage of trips by bicycle")
# ggsave("~/Dropbox/DutchBikes/figures/nts-time.png")
## color scheme for output
library(RColorBrewer)
myColors <- brewer.pal(4,"Set1")
names(myColors) <- c("Current rate", "Needed rate", "10 yr doubling", "DfT's NTM")
colScale <- scale_colour_manual(name = "Model",values = myColors)
# making hypothetical future data
x <- 1:8
y <- ntpy$Prop.cycle * 100
df <- data.frame(cbind(x,y))
# lm1 <- lm(y ~ x, data=df) # commented out - not linear!
df2 <- data.frame(x= 2000:2050 -2004)
# p1 <- predict(lm1, df2) # 1/2 way there by 2500 at current rate!
# df2050 <- data.frame(Year = 2000:2050, prop.cycle = p1, model = "Current rate" )
# Data from NTS 2013
# Also contains Inner London cycling data, from here http://aseasyasridingabike.wordpress.com/2013/12/26/some-statistics-from-the-latest-travel-in-london-report/
# And NTM data from here from http://www.publications.parliament.uk/pa/cm201314/cmhansrd/cm131031/text/131031w0001.htm
nts12 <- read.csv("input-data/nts2013.csv")
nts12$model <- gsub(pattern = "TFL", replacement = "TfL", nts12$model)
df2050 <- nts12
df2050$prop.cycle <- df2050$prop.cycle * 100
names(df2050)[3] <- "model"
# dfneed <- data.frame(Year = 2000:2050, prop.cycle = c(p1[1:15], seq(1.7,25,length.out=36)), model = "Linear" )
dfneed <- data.frame(Year = 2015:2050, prop.cycle = c(seq(1.7,25,length.out=36)), model = "Linear" )
df2050 <- rbind(df2050, dfneed)
qplot(data = df2050, x = Year, y = prop.cycle, color = model) + ylab("Percentage of trips by bicycle") +  theme_bw() # + colScale
dfneed[20,2] - dfneed[19,2] # rate of cycling need to grow by 0.67% points pa for next 35 years
# ggsave("~/Dropbox/DutchBikes/figures/nts-time2050.png")
# the real world can be linear http://data.london.gov.uk/datastore/package/cycle-flows-tfl-road-network
# rw <- read.csv("lndn-counts.csv")
# class(rw$Pedal.Cycle.Counts.Indexed)
# plot(1:nrow(rw), rw$Pedal.Cycle.Counts.Indexed)
# rw$Year <- seq(2000, 2014, length.out=nrow(rw))
# qplot(rw$Year, rw$Pedal.Cycle.Counts.Indexed) + geom_smooth(method=lm, fill = NA) +
#   scale_x_continuous(breaks  = 2000:2014) + xlab("Year") + ylab("Cycle count index") +
#   theme_bw()
# 1.7 / 8
# 1.7 * 8 # could hit 25% by 2050, just if it's exponential
# # ggsave("~/Dropbox/DutchBikes/figures/lnd-linear.png")
#
# # distance cycled
# dc <- read.csv("nts/nts0306-avdist.csv", sep = "\t")
# dct <- data.frame(Year = ntpy$Year[8:20], Distance = as.numeric(dc[2,2:14]))
# plot(dct)
# ggplot(dct, aes(x=Year, y=Distance)) + geom_point() + ylab("Distance (miles)") + theme_bw() +
#    colScale
# ggsave("~/Dropbox/DutchBikes/figures/avdist.png")
dw <- data.frame(Year = 2015:2050)
dw$prop.cycle <- 1.7 * (2^(1:36/10))
dw$model <- "Exponential"
plot(dw$Year, dw$prop.cycle)
df2050 <- rbind(df2050, dw)
qplot(data = df2050, x = Year, y = prop.cycle, color = model) + ylab("Percentage of trips by bicycle") +  theme_bw() # + colScale
# ggsave("~/Dropbox/DutchBikes/figures/doubling.png")
# analysis of DfT's projections:
# (106.63 -109.73) / 127 # 2% in 2010
# (130.163 - 127.067) / 152
# dftntm <- data.frame(Year = 2010:2035, prop.cycle = seq(2.4, 2.04, length.out= 26), model = "DfT's NTM")
# df2050 <- rbind(df2050, dftntm)
# qplot(data = df2050, x = Year, y = prop.cycle, color = model) + ylab("Percentage of trips by bicycle") +  theme_bw() # + colScale
# ggsave("~/Dropbox/DutchBikes/figures/ntm-out.png")
# the logistic growth model
k = 27
B = 1.7
r = 0.15
time = 0:35
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
plot(lgrowth)
lgrowth <- data.frame(Year = time + 2015, prop.cycle = lgrowth, model = "Logistic")
# redo colors, plot
# library(RColorBrewer)
# myColors <- c(brewer.pal(4,"Set1"), "black")
# names(myColors) <- c("Current rate", "Needed rate", "10 yr doubling", "DfT's NTM", "Logistic")
# colScale <- scale_colour_manual(name = "Model",values = myColors)
df2050 <- rbind(df2050, lgrowth)
ptext <- c("GBC 2025 target", "GBC 2050 target")
px <- c(2007, 2007)
py <- c(10.8, 25.8)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_point(data = df2050, aes(x = Year, y = prop.cycle, color = model)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Data/model") + geom_text(aes(px, py, label = ptext), size = 4)
dfdots <- df2050[ grepl("NT|Tf", df2050$model), ]
dfline <- df2050[ -which(grepl("NT|Tf", df2050$model)), ]
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = dfline, aes(x = Year, y = prop.cycle, color = model)) + geom_point(data = dfdots, aes(x = Year, y = prop.cycle, shape = model)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(px, py, label = ptext), size = 4)
save.image(file = "df2050.Rdata")
load("df2050.Rdata")
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = dfline, aes(x = Year, y = prop.cycle, color = model)) + geom_point(data = dfdots, aes(x = Year, y = prop.cycle, shape = model)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(px, py, label = ptext), size = 4)
ntpy
df2050
seq(0.017, 0.017 * 1.74, length.out = 10)
s2050 <- data.frame(Year = 2015:2050, Perc_stages = seq(0.017, 0.017 * 1.74 * 3.5, length.out = 35), Scenario = "DfT")
s2050 <- data.frame(Year = 2015:2050, Perc_stages = seq(0.017, 0.017 * 1.74 * 3.5, length.out = 36))
plot(s2050)
1.7 * 1.74
s2050
2015:2050
0.017 * 1.74
0.017 * 1.74 / 11
0.017 * 1.74 / 11 * 36
dft2050 <- 0.017 * 1.74 / 11 * 36
seq(0.017, dft2050, length.out = 36)
0.017 * 1.74
dft2050 <- (0.017 * 1.74 / 11) * 36
seq(0.017, dft2050, length.out = 36)
dft2050 <- (0.017 * 1.74 / 11 - 0.017) * 36
seq(0.017, dft2050, length.out = 36)
0.017 * 1.74 / 11
0.017 * 1.74 - 0.017
.Last.value * 11 + 0.017
0.017 * 1.74 - 0.017
.Last.value / 11
.Last.value * 11 + 0.017
(0.017 * 1.74 - 0.017) / 11 * 36 + 0.017
dft2050 <- (0.017 * 1.74 - 0.017) / 11 * 36 + 0.017
seq(0.017, dft2050, length.out = 36)
dft2050 <- ((0.017 * 1.74 - 0.017) / 11) * 36 + 0.017
seq(0.017, dft2050, length.out = 36)
0.017 * 1.74 - 0.017
(p.yr <- 0.017 * 1.74 - 0.017)
p.yr * 10 + 0.017
seq(0.017, 0.017 * 1.74)
seq(0.017, 0.017 * 1.74, length.out = 11)
s1 <- seq(0.017, 0.017 * 1.74, length.out = 11) # the sequence to 2025
(p.yr <- s1[2] - s1[1])
p.yr * 35 + 0.017
(dftend <- p.yr * 35 + 0.017)
seq(0.017, dftend, length.out = 36)
(dftend <- p.yr * 34 + 0.017)
dft2050 <- ((0.017 * 1.74 - 0.017) / 11) * 36 + 0.017
seq(0.017, dftend, length.out = 36)
s1 <- seq(0.017, 0.017 * 1.74, length.out = 11) # the sequence to 2025
s1
(p.yr <- s1[2] - s1[1])
(dftend <- p.yr * 35 + 0.017)
seq(0.017, dftend, length.out = 36)
s1 <- seq(0.017, 0.017 * 1.74, length.out = 11) # the sequence to 2025
s1
sdft <- seq(0.017, dftend, length.out = 36)
s2050 <- data.frame(Year = 2015:2050, Perc_stages = sdft)
s2050 <- data.frame(Year = 2015:2050, Perc_stages = sdft, Scenario = "DfT")
plot(s2050)
dft2050 <- data.frame(Year = 2015:2050, Perc_stages = sdft, Scenario = "DfT")
dft <- data.frame(Year = 2015:2050, Perc_stages = sdft, Scenario = "DfT")
plot(lgrowth)
sdft[11]
B = sdft[11]
r = 0.15
time = 10:35
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
plot(lgrowth)
k = 0.27
B = sdft[11]
r = 0.15
time = 10:35
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
plot(lgrowth)
k = 0.26
B = sdft[11]
r = 0.15
time = 10:35
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
plot(lgrowth)
slow_start <- dft
slow_start$Scenario <- "Slow start"
slow_start$Perc_stages[11:36] <- lgrowth
plot(slow_start$Perc_stages)
k = 0.26
B = sdft[11]
r = 0.15
time = 0:25
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
plot(lgrowth)
slow_start <- dft
slow_start$Scenario <- "Slow start"
slow_start$Perc_stages[11:36] <- lgrowth
plot(slow_start$Perc_stages)
plot(slow_start$Year, slow_start$Perc_stages)
k = 27
B = 1.7
r = 0.15
time = 0:35
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
plot(lgrowth)
go_dutch <- dft
go_dutch <- dft
go_dutch$Scenario <- "Go Dutch"
go_dutch$Perc_stages <- lgrowth
plot(go_dutch$Year, go_dutch$Perc_stages)
s2050 <- rbind(dft, slow_start, go_dutch)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(px, py, label = ptext), size = 4)
s1 <- seq(0.017, 0.017 * 1.74, length.out = 11) # the sequence to 2025
(p.yr <- s1[2] - s1[1])
(dftend <- p.yr * 35 + 0.017)
sdft <- seq(0.017, dftend, length.out = 36)
dft <- data.frame(Year = 2015:2050, Perc_stages = sdft  100, Scenario = "DfT")
```
```{r, echo=FALSE}
# slow start
k = 0.26
B = sdft[11]
r = 0.15
time = 0:25
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
plot(lgrowth)
slow_start <- dft
slow_start$Scenario <- "Slow start"
slow_start$Perc_stages[11:36] <- lgrowth * 100
plot(slow_start$Year, slow_start$Perc_stages)
dft <- data.frame(Year = 2015:2050, Perc_stages = sdft  100, Scenario = "DfT")
sdft <- seq(0.017, dftend, length.out = 36) * 100
dft <- data.frame(Year = 2015:2050, Perc_stages = sdft, Scenario = "DfT")
```
```{r, echo=FALSE}
# slow start
k = 0.26
B = sdft[11]
r = 0.15
time = 0:25
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
plot(lgrowth)
k = 26
B = sdft[11]
r = 0.15
time = 0:25
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
plot(lgrowth)
slow_start <- dft
slow_start$Scenario <- "Slow start"
slow_start$Perc_stages[11:36] <- lgrowth * 100
plot(slow_start$Year, slow_start$Perc_stages)
slow_start$Perc_stages[11:36] <- lgrowth
plot(slow_start$Year, slow_start$Perc_stages)
```
```{r}
# Go Dutch scenario
k = 27
B = 1.7
r = 0.15
time = 0:35
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
plot(lgrowth)
go_dutch <- dft
go_dutch$Scenario <- "Go Dutch"
go_dutch$Perc_stages <- lgrowth
plot(go_dutch$Year, go_dutch$Perc_stages)
s2050 <- rbind(dft, slow_start, go_dutch)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2010, py, label = ptext), size = 4)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2015, py, label = ptext), size = 4)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4)
ggsave("figures/stages.png")
load("df2050.Rdata")
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = dfline, aes(x = Year, y = prop.cycle, color = model)) + geom_point(data = dfdots, aes(x = Year, y = prop.cycle, shape = model)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(px, py, label = ptext), size = 4)
```
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4)
kable(rbind(
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dswitch == "Bicycle"]),
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dmswitch == "Bicycle"]))/
length(which(bike)))
library(knitr)
kable(rbind(
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dswitch == "Bicycle"]),
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dmswitch == "Bicycle"]))/
length(which(bike)))
source('~/.active-rstudio-document', echo=TRUE)
rbind(
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dswitch == "Bicycle"]),
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dmswitch == "Bicycle"]))/
length(which(bike))
rbind(
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dswitch == "Bicycle"]),
summary(ssam$mode[ssam$mode != "Bicycle" & ssam$dmswitch == "Bicycle"]))/
length(which(bike)) * 100
set.seed(100)
sel <- sample(nrow(ssam), size = length(which(ssam$mode == "Bicycle")), prob = pswitch)
ssam$pswitch_d <- pswitch
ssam$dswitch <- ssam$mode
ssam$dswitch[sel] <- "Bicycle"
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd, fill = dswitch)) + scale_fill_brewer(type = "qual")
source('~/.active-rstudio-document', echo=TRUE)
kable(tchange, digits = 1)
install.packages("data.table")
s1 <- seq(0.017, 0.017 * 1.74, length.out = 11) # the sequence to 2025
p.yr <- s1[2] - s1[1]
dftend <- p.yr * 35 + 0.017
sdft <- seq(0.017, dftend, length.out = 36) * 100
dft <- data.frame(Year = 2015:2050, Perc_stages = sdft, Scenario = "DfT")
```
```{r, echo=FALSE}
# slow start
k = 26
B = sdft[11]
r = 0.15
time = 0:25
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
# plot(lgrowth)
slow_start <- dft
slow_start$Scenario <- "Slow start"
slow_start$Perc_stages[11:36] <- lgrowth
# plot(slow_start$Year, slow_start$Perc_stages)
```
```{r, echo=FALSE}
# Go Dutch scenario
k = 27
B = 1.7
r = 0.15
time = 0:35
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
# plot(lgrowth)
go_dutch <- dft
go_dutch$Scenario <- "Go Dutch"
go_dutch$Perc_stages <- lgrowth
# plot(go_dutch$Year, go_dutch$Perc_stages)
```
```{r, echo=FALSE}
s2050 <- rbind(dft, slow_start, go_dutch)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4)
s2050 <- rbind(dft, slow_start, go_dutch)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4)
library(ggplot)
library(ggplot2)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4)
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd, fill = simple)) + scale_fill_brewer(type = "qual")
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd, fill = mode)) + scale_fill_brewer(type = "qual")
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, fill = mode)) + scale_fill_brewer(type = "qual") + xlab("Miles")
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, fill = simple)) + scale_fill_brewer(type = "qual") + xlab("Miles")
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, fill = dswitch)) + scale_fill_brewer(type = "qual") + xlab("Miles")
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, fill = dswitch)) + scale_fill_brewer(type = "qual") + xlab("Miles")
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, fill = dswitch), stat = "density") + scale_fill_brewer(type = "qual") + xlab("Miles")
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, fill = dswitch),) + scale_fill_brewer(type = "qual") + xlab("Miles") + stat_bin(y = ..density..)
```
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, group = dswitch, fill = dswitch),) + scale_fill_brewer(type = "qual") + xlab("Miles") + stat_bin(y = ..density..)
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, group = dswitch, fill = dswitch),) + scale_fill_brewer(type = "qual") + xlab("Miles") + stat_bin(aes(y = ..density..))
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, group = dswitch, fill = dswitch),) + scale_fill_brewer(type = "qual") + xlab("Miles") + stat_bin(aes(x = sd/10, y = ..density..))
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, group = dswitch, fill = dswitch),) + stat_bin(aes(x = sd/10, y = ..density..)) + scale_fill_brewer(type = "qual") + xlab("Miles")
ggplot(ssam[ ssam$sd < 300, ], aes(x = sd/10, group = dswitch, fill = dswitch)) + stat_bin(aes(x = sd/10, y = ..density..)) + scale_fill_brewer(type = "qual") + xlab("Miles")
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, group = dswitch, fill = dswitch),) + scale_fill_brewer(type = "qual") + xlab("Miles") + stat_bin(aes(x = sd/10, y = ..density..)) # not density
ggplot(df12) + geom_histogram(aes(dkm)) + facet_grid(~ scenario) + xlim(c(0, 30)) +
xlab("Distance")
length(unique(ssam$X))
length(unique(ssam$j3))
length(unique(ssam$j14))
length(unique(ssam$s1))
length(ssam$s1 > 1)
sum(ssam$s1 > 1))
sum(ssam$s1 > 1)
sum(which(ssam$s1 > 1))
sum(as.numeric(ssam$s1) > 1)
sum(as.numeric(ssam$s1) > 1) / length(unique(ssam$X))
ssam$epkm <- 3
summary(ssam$mod)
ssam$epkm <- 0
ssam$epkm[ grep("driv", ssam$mode)  ] <- 3
ssam$epkm[ grep("driv", ssam$mode)  ]
summary(ssam$mode)
summary(ssam$mode)
ssam$epkm <- 0
ssam$epkm[ grep("driv", ssam$mode)  ] <- 3
ssam$epkm[ grep("Bus", ssam$mode)  ] <- 2
sel_simple <- which(ssam$simple == "Bicycle" & ssam$mode != "Bicycle")
sum(ssam$epkm[sel_simple] * ssam$dkm[sel_simple])
sel_ds <- which(ssam$dswitch == "Bicycle" & ssam$mode != "Bicycle")
sum(ssam$epkm[sel_ds] * ssam$dkm[sel_ds])
sum(ssam$epkm[sel_ds] * ssam$dkm[sel_ds]) / sum(ssam$epkm * ssam$dkm)
tapply(ssam$epkm[sel_ds], ssam$j58g[sel_ds], FUN = function(x) x *  ssam$dkm[sel_ds])
tapply(ssam$epkm[sel_ds], ssam$j58g[sel_ds], FUN = function(x) sum(x *  ssam$dkm[sel_ds]))
gorsum <- tapply(ssam$epkm[sel_ds], ssam$j58g[sel_ds], FUN = function(x) sum(x *  ssam$dkm[sel_ds]))
sum(gorsum)
sum(ssam$epkm[sel_simple] * ssam$dkm[sel_simple])
sum(ssam$epkm[sel_ds] * ssam$dkm[sel_ds])
ssam$esave <- ssam$epkm * ssam$dkm
sel_simple <- which(ssam$simple == "Bicycle" & ssam$mode != "Bicycle")
sum(ssam$epkm[sel_simple] * ssam$dkm[sel_simple])
sum(ssam$esave[sel_simple])
tapply(ssam$esave, INDEX = ssam$j58g, FUN = sum(x[sel_simple]))
tapply(ssam$esave, INDEX = ssam$j58g, FUN = function(x) sum(x[sel_simple]))
tapply(ssam$esave, INDEX = ssam$j58g, FUN = function(x) sum(x[sel_simple], na.rm = T))
gorsum <- tapply(ssam$esave, INDEX = ssam$j58g, FUN = function(x) sum(x[sel_simple], na.rm = T))
sum(gorsum)
sum(ssam$esave[sel_simple])
ssam$esave_s <- ssam$esave
ssam$esave_s[!sel_simple] <- 0
gorsum <- tapply(ssam$esave_s, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
gorsum
sum(gorsum)
sum(ssam$esave[sel_simple])
ssam$esave_s[!sel_simple]
sel_simple
sel_simple <- ssam$simple == "Bicycle" & ssam$mode != "Bicycle"
sum(ssam$esave[sel_simple])
ssam$esave_s <- ssam$esave
ssam$esave_s[!sel_simple] <- 0
ssam$esave_s[!sel_simple]
gorsum <- tapply(ssam$esave_s, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
gorsum
barplot(gorsum)
sel_ds <- which(ssam$dswitch == "Bicycle" & ssam$mode != "Bicycle")
sum(ssam$esave[sel_simple])
ssam$esave_ds <- ssam$esave
ssam$esave_sds[!sel_simple] <- 0
gorsum <- tapply(ssam$esave_ds, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
sel_ds <- which(ssam$dswitch == "Bicycle" & ssam$mode != "Bicycle")
sum(ssam$esave[sel_ds])
ssam$esave_ds <- ssam$esave
ssam$esave_ds[!sel_ds] <- 0
gorsum <- tapply(ssam$esave_ds, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
sel_ds <- ssam$dswitch == "Bicycle" & ssam$mode != "Bicycle"
sum(ssam$esave[sel_ds])
ssam$esave_ds <- ssam$esave
ssam$esave_ds[!sel_ds] <- 0
gorsum <- tapply(ssam$esave_ds, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
names(gorsum)
eframe <- data.frame(Region = names(gorsum), Simple = gorsum)
eframe
gorsum <- tapply(ssam$esave_s, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
eframe <- data.frame(Region = names(gorsum), Simple = gorsum)
sel_ds <- ssam$dswitch == "Bicycle" & ssam$mode != "Bicycle"
sum(ssam$esave[sel_ds])
ssam$esave_ds <- ssam$esave
ssam$esave_ds[!sel_ds] <- 0
gorsum <- tapply(ssam$esave_ds, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
tsum <- tapply(ssam$esave, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
gorsum <- tapply(ssam$esave_s, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
gorsum / tsum
ssam$esave_s <- ssam$esave
ssam$esave_s[!sel_simple] <- 0
tsum <- tapply(ssam$esave, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
gorsum <- tapply(ssam$esave_s, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
eframe <- data.frame(Region = names(gorsum), Simple = gorsum / tsum)
sel_ds <- ssam$dswitch == "Bicycle" & ssam$mode != "Bicycle"
sum(ssam$esave[sel_ds])
ssam$esave_ds <- ssam$esave
ssam$esave_ds[!sel_ds] <- 0
gorsum <- tapply(ssam$esave_ds, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
eframe$Dswitch <- gorsum / tsum
eframe <- melt(eframe)
library(reshape2)
eframe <- melt(eframe)
head(eframe)
names(eframe) <- c("Region", "Scenario", "Proportion")
qplot(x = eframe$Region, y = value, fill = variable)
qplot(x = eframe$Region, y = Proportion, fill = Scenario)
names(eframe) <- c("Region", "Scenario", "Proportion")
qplot(x = Region, y = Proportion, fill = Scenario, data = eframe)
qplot(x = Region, y = Proportion, fill = Scenario, data = eframe, geom = "bar")
qplot(x = Region, y = Proportion, fill = Scenario, data = eframe, geom = "bar", stat = "dodge")
qplot(x = Region, y = Proportion, fill = Scenario, data = eframe, geom = "bar", position = "dodge") # energy savings 'distance switch = 2.7 * less than overall)
?theme
qplot(x = Region, y = Proportion, fill = Scenario, data = eframe, geom = "bar", position = "dodge") +
theme(axis.text.x = element_text(angle = 90))
theme(axis.text.x = element_text(angle = 90, hjust = 0))
qplot(x = Region, y = Proportion, fill = Scenario, data = eframe, geom = "bar", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 0))
qplot(x = Region, y = Proportion, fill = Scenario, data = eframe, geom = "bar", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# energy savings 'distance switch = 2.7 * less than overall)
## Energy savings by 2050
summary(ssam$mode)
ssam$epkm <- 0
# summary(ssam$mode)
ssam$epkm <- 0
ssam$epkm[ grep("driv", ssam$mode)  ] <- 3
ssam$epkm[ grep("Bus", ssam$mode)  ] <- 2
ssam$esave <- ssam$epkm * ssam$dkm
sel_simple <- ssam$simple == "Bicycle" & ssam$mode != "Bicycle"
sum(ssam$esave[sel_simple])
ssam$esave_s <- ssam$esave
# sum(ssam$esave[sel_simple])
ssam$esave_s <- ssam$esave
ssam$esave_s[!sel_simple] <- 0
tsum <- tapply(ssam$esave, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
gorsum <- tapply(ssam$esave_s, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
eframe <- data.frame(Region = names(gorsum), Simple = gorsum / tsum)
# sum(gorsum)
eframe <- data.frame(Region = names(gorsum), Simple = gorsum / tsum)
sel_ds <- ssam$dswitch == "Bicycle" & ssam$mode != "Bicycle"
sum(ssam$esave[sel_ds])
ssam$esave_ds <- ssam$esave
# sum(ssam$esave[sel_ds])
ssam$esave_ds <- ssam$esave
ssam$esave_ds[!sel_ds] <- 0
gorsum <- tapply(ssam$esave_ds, INDEX = ssam$j58g, FUN = function(x) sum(x, na.rm = T))
sum(gorsum)
eframe$Dswitch <- gorsum / tsum
# sum(gorsum)
eframe$Dswitch <- gorsum / tsum
library(reshape2)
eframe <- melt(eframe)
names(eframe) <- c("Region", "Scenario", "Proportion")
qplot(x = Region, y = Proportion, fill = Scenario, data = eframe, geom = "bar", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# energy savings 'distance switch = 2.7 * less than overall)
sum(ssam$epkm[sel_ds] * ssam$dkm[sel_ds]) / sum(ssam$epkm * ssam$dkm)
