agecats$mean_dis_go_dutch_2050[agecats$age == i] <- mean(iss$dist_cycle_go_2050[sel])
sel2 <- sel[ iss$dist_cycle_go_2050 [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch_2050[agecats$age == i] <- mean(iss$dist_cycle_go_2050[sel2])
agecats$sd_dis_cyclists_go_dutch_2050[agecats$age == i] <- sd(iss$dist_cycle_go_2050[sel2])
}
# Add gender, first with names
mnames <- paste0(names(agecats)[-1], "_m")
fnames <- paste0(names(agecats)[-1], "_f")
# Subset the population
iss_m <- iss[ iss$sex == "Male", ]
iss_f <- iss[ iss$sex == "Female", ]
for(i in levels(iss_m$age)){
sel <- which(iss_m$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_m$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_m$dist_cycle[sel])
sel2 <- sel[iss_m$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_m$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_m$dist_cycle[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_m$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel])
sel2 <- sel[ iss_m$dist_cycle_go [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_m$dist_cycle_go[sel2])
agecats$not_cycled_go_dutch_2050[agecats$age == i] <- sum(iss_m$dist_cycle_go_2050[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch_2050[agecats$age == i] <- mean(iss_m$dist_cycle_go_2050[sel])
sel2 <- sel[ iss_m$dist_cycle_go_2050 [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch_2050[agecats$age == i] <- mean(iss_m$dist_cycle_go_2050[sel2])
agecats$sd_dis_cyclists_go_dutch_2050[agecats$age == i] <- sd(iss_m$dist_cycle_go_2050[sel2])
}
agecats_m <- agecats
names(agecats_m)[-1] <- mnames
# Now for females
for(i in levels(iss_f$age)){
sel <- which(iss_f$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_f$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_f$dist_cycle[sel])
sel2 <- sel[iss_f$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_f$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_f$dist_cycle[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_f$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel])
sel2 <- sel[ iss_f$dist_cycle_go[sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_f$dist_cycle_go[sel2])
agecats$not_cycled_[agecats$age == i] <- sum(iss_f$dist_cycle_go_2050[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch_2050[agecats$age == i] <- mean(iss_f$dist_cycle_go_2050[sel])
sel2 <- sel[ iss_f$dist_cycle_go_2050 [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch_2050[agecats$age == i] <- mean(iss_f$dist_cycle_go_2050[sel2])
agecats$sd_dis_cyclists_go_dutch_2050[agecats$age == i] <- sd(iss_f$dist_cycle_go_2050[sel2])
}
agecats_f <- agecats
names(agecats_f)[-1] <- fnames
fnames
names(agecats)
iss <- indscen_all
# write.csv(iss, "~/Dropbox/energy_saving.csv")
summary(iss)
# Percentage in each group
length(which(iss$dist_cycle_go == 0)) / nrow(iss) # the overall percentage
agecats <- data.frame(age = levels(iss$age), not_cycled = NA, mean_dis = NA, mean_dis_cyclists = NA, sd_dis_cyclists = NA, not_cycled_go_dutch = NA, mean_dis_go_dutch = NA, mean_dis_cyclists_go_dutch = NA, sd_dis_cyclists_go_dutch = NA, not_cycled_go_dutch_2050 = NA, mean_dis_go_dutch_2050 = NA, mean_dis_cyclists_go_dutch_2050 = NA, sd_dis_cyclists_go_dutch_2050 = NA)
# run the calculations
for(i in levels(iss$age)){
sel <- which(iss$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss$dist_cycle[sel])
sel2 <- sel[iss$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss$dist_cycle[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss$dist_cycle_go[sel])
sel2 <- sel[ iss$dist_cycle_go [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss$dist_cycle_go[sel2])
agecats$not_cycled_go_dutch_2050[agecats$age == i] <- sum(iss$dist_cycle_go_2050[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch_2050[agecats$age == i] <- mean(iss$dist_cycle_go_2050[sel])
sel2 <- sel[ iss$dist_cycle_go_2050 [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch_2050[agecats$age == i] <- mean(iss$dist_cycle_go_2050[sel2])
agecats$sd_dis_cyclists_go_dutch_2050[agecats$age == i] <- sd(iss$dist_cycle_go_2050[sel2])
}
# Add gender, first with names
mnames <- paste0(names(agecats)[-1], "_m")
fnames <- paste0(names(agecats)[-1], "_f")
# Subset the population
iss_m <- iss[ iss$sex == "Male", ]
iss_f <- iss[ iss$sex == "Female", ]
for(i in levels(iss_m$age)){
sel <- which(iss_m$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_m$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_m$dist_cycle[sel])
sel2 <- sel[iss_m$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_m$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_m$dist_cycle[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_m$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel])
sel2 <- sel[ iss_m$dist_cycle_go [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_m$dist_cycle_go[sel2])
agecats$not_cycled_go_dutch_2050[agecats$age == i] <- sum(iss_m$dist_cycle_go_2050[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch_2050[agecats$age == i] <- mean(iss_m$dist_cycle_go_2050[sel])
sel2 <- sel[ iss_m$dist_cycle_go_2050 [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch_2050[agecats$age == i] <- mean(iss_m$dist_cycle_go_2050[sel2])
agecats$sd_dis_cyclists_go_dutch_2050[agecats$age == i] <- sd(iss_m$dist_cycle_go_2050[sel2])
}
agecats_m <- agecats
names(agecats_m)[-1] <- mnames
# Now for females
for(i in levels(iss_f$age)){
sel <- which(iss_f$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_f$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_f$dist_cycle[sel])
sel2 <- sel[iss_f$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_f$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_f$dist_cycle[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_f$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel])
sel2 <- sel[ iss_f$dist_cycle_go[sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_f$dist_cycle_go[sel2])
agecats$not_cycled_[agecats$age == i] <- sum(iss_f$dist_cycle_go_2050[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch_2050[agecats$age == i] <- mean(iss_f$dist_cycle_go_2050[sel])
sel2 <- sel[ iss_f$dist_cycle_go_2050 [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch_2050[agecats$age == i] <- mean(iss_f$dist_cycle_go_2050[sel2])
agecats$sd_dis_cyclists_go_dutch_2050[agecats$age == i] <- sd(iss_f$dist_cycle_go_2050[sel2])
}
agecats_f <- agecats
names(agecats_f)[-1] <- fnames
length(fnames)
length(names(agecats))
names(agecats)
agecats <- data.frame(age = levels(iss$age), not_cycled = NA, mean_dis = NA, mean_dis_cyclists = NA, sd_dis_cyclists = NA, not_cycled_go_dutch = NA, mean_dis_go_dutch = NA, mean_dis_cyclists_go_dutch = NA, sd_dis_cyclists_go_dutch = NA, not_cycled_go_dutch_2050 = NA, mean_dis_go_dutch_2050 = NA, mean_dis_cyclists_go_dutch_2050 = NA, sd_dis_cyclists_go_dutch_2050 = NA)
names(agecats)
# run the calculations
for(i in levels(iss$age)){
sel <- which(iss$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss$dist_cycle[sel])
sel2 <- sel[iss$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss$dist_cycle[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss$dist_cycle_go[sel])
sel2 <- sel[ iss$dist_cycle_go [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss$dist_cycle_go[sel2])
agecats$not_cycled_go_dutch_2050[agecats$age == i] <- sum(iss$dist_cycle_go_2050[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch_2050[agecats$age == i] <- mean(iss$dist_cycle_go_2050[sel])
sel2 <- sel[ iss$dist_cycle_go_2050 [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch_2050[agecats$age == i] <- mean(iss$dist_cycle_go_2050[sel2])
agecats$sd_dis_cyclists_go_dutch_2050[agecats$age == i] <- sd(iss$dist_cycle_go_2050[sel2])
}
# Add gender, first with names
mnames <- paste0(names(agecats)[-1], "_m")
fnames <- paste0(names(agecats)[-1], "_f")
# Subset the population
iss_m <- iss[ iss$sex == "Male", ]
iss_f <- iss[ iss$sex == "Female", ]
mnames
names(agecats)
# Subset the population
iss_m <- iss[ iss$sex == "Male", ]
iss_f <- iss[ iss$sex == "Female", ]
for(i in levels(iss_m$age)){
sel <- which(iss_m$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_m$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_m$dist_cycle[sel])
sel2 <- sel[iss_m$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_m$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_m$dist_cycle[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_m$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel])
sel2 <- sel[ iss_m$dist_cycle_go [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_m$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_m$dist_cycle_go[sel2])
agecats$not_cycled_go_dutch_2050[agecats$age == i] <- sum(iss_m$dist_cycle_go_2050[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch_2050[agecats$age == i] <- mean(iss_m$dist_cycle_go_2050[sel])
sel2 <- sel[ iss_m$dist_cycle_go_2050 [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch_2050[agecats$age == i] <- mean(iss_m$dist_cycle_go_2050[sel2])
agecats$sd_dis_cyclists_go_dutch_2050[agecats$age == i] <- sd(iss_m$dist_cycle_go_2050[sel2])
}
agecats
names(agecats)
agecats_m <- agecats
mnames
names(agecats_m)[-1]
names(agecats_m)[-1] <- mnames
for(i in levels(iss_f$age)){
sel <- which(iss_f$age == i)
agecats$not_cycled[agecats$age == i] <- sum(iss_f$dist_cycle[sel] == 0) / length(sel)
agecats$mean_dis[agecats$age == i] <- mean(iss_f$dist_cycle[sel])
sel2 <- sel[iss_f$dist_cycle[sel] > 0] # cyclists
agecats$mean_dis_cyclists[agecats$age == i] <- mean(iss_f$dist_cycle[sel2])
agecats$sd_dis_cyclists[agecats$age == i] <- sd(iss_f$dist_cycle[sel2])
agecats$not_cycled_go_dutch[agecats$age == i] <-
sum(iss_f$dist_cycle_go[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel])
sel2 <- sel[ iss_f$dist_cycle_go[sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch[agecats$age == i] <- mean(iss_f$dist_cycle_go[sel2])
agecats$sd_dis_cyclists_go_dutch[agecats$age == i] <- sd(iss_f$dist_cycle_go[sel2])
agecats$not_cycled_go_dutch_2050[agecats$age == i] <- sum(iss_f$dist_cycle_go_2050[sel] == 0) / length(sel)
agecats$mean_dis_go_dutch_2050[agecats$age == i] <- mean(iss_f$dist_cycle_go_2050[sel])
sel2 <- sel[ iss_f$dist_cycle_go_2050 [sel] > 0] # cyclists
agecats$mean_dis_cyclists_go_dutch_2050[agecats$age == i] <- mean(iss_f$dist_cycle_go_2050[sel2])
agecats$sd_dis_cyclists_go_dutch_2050[agecats$age == i] <- sd(iss_f$dist_cycle_go_2050[sel2])
}
agecats_f <- agecats
names(agecats_f)[-1] <- fnames
agecats <- cbind(agecats_m, agecats_f[-1])
agecats
View(agecats)
write.csv(agecats, file = "/tmp/age_cats_final_age_notall.csv")
agecats_old <- read.csv("/tmp/age_cats_final_2025.csv")
cbind(as.character(agecats$age), agecats$not_cycled_go_dutch_m - agecats_old$not_cycled_go_dutch_m)
agecats_old$not_cycled_go_dutch_m - agecats$mean_dis_go_dutch_m
agecats_old$not_cycled_go_dutch_m - agecats$not_cycled_go_dutch_m
agecats_old$mean_dis_cyclists_go_dutch_m - agecats$mean_dis_cyclists_go_dutch_m
agecats$not_cycled_go_dutch_m
agecats_old$not_cycled_go_dutch_m
qplot(data = modes, x = Mode, y = Percentage, fill = Scenario, geom = "bar", stat = "identity", position = "dodge") # plot of mode split - refine + add
qplot(data = modes, x = Mode, y = Percentage, fill = Scenario, geom = "bar", stat = "identity", position = "dodge")  + theme_classic() + theme(axis.text.x = element_text(angle = 10))# plot of mode split - refine + add
modes <- data.frame(Mode = names(modes), Current = modes,  Go_Dutch_2025 = as.numeric(summary(tsam$dswitch_2025_go) / nrow(tsam)), Go_Dutch_2050 = as.numeric(summary(tsam$dswitch_2050_go) / nrow(tsam)))
as.numeric(summary(tsam$dswitch_2050_go) / nrow(tsam))
as.numeric(summary(tsam$dswitch_2025_go) / nrow(tsam))
modes
modes <- summary(tsam$mode) / nrow(tsam)
modes <- data.frame(Mode = names(modes), Current = modes,  Go_Dutch_2025 = as.numeric(summary(tsam$dswitch_2025_go) / nrow(tsam)), Go_Dutch_2050 = as.numeric(summary(tsam$dswitch_2050_go) / nrow(tsam)))
modes <- melt(modes)
names(modes) <- c("Mode", "Scenario", "Percentage")
modes$Percentage <- modes$Percentage * 100
qplot(data = modes, x = Mode, y = Percentage, fill = Scenario, geom = "bar", stat = "identity", position = "dodge")  + theme_classic() + theme(axis.text.x = element_text(angle = 10)) # plot of mode split - refine + add
ggsave("figures/future-modes.png")
load("df2050.Rdata") # load basic data on growth
# DfT scenario
s1 <- seq(0.017, 0.017 * 1, length.out = 11) # the sequence to 2025 - CP
# s1 <- seq(0.017, 0.017 * 1.083, length.out = 11) # the sequence to 2025 - PQ
p.yr <- s1[2] - s1[1]
dftend <- p.yr * 35 + 0.017
sdft <- seq(0.017, dftend, length.out = 36) * 100 # continuation of dft scen. to 2050
dft <- data.frame(Year = 2015:2050, Perc_stages = sdft, Scenario = "DfT")
# Slow start
k = 26
B = sdft[11]
r = 0.15
time = 0:25
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
slow_start <- dft
slow_start$Scenario <- "Slow start"
slow_start$Perc_stages[11:36] <- lgrowth
# plot(slow_start$Year, slow_start$Perc_stages)
# Go Dutch scenario
k = 27
B = 1.7
r = 0.15
time = 0:35
lgrowth <- (B * k * exp(r * time)) / (k + B * (exp( r * time) - 1) )
go_dutch <- dft
go_dutch$Scenario <- "Go Dutch"
go_dutch$Perc_stages <- lgrowth
# plot(go_dutch$Year, go_dutch$Perc_stages)
ecotech <- go_dutch
ecotech$Scenario <- "Ecotechnic"
dft$Scenario <- "DfT (NTM)"
s2050 <- rbind(dft, slow_start, go_dutch)
library(ggplot2)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none")
mean(ssam$dkm)
mean(tsam$dkm)
s2050 <- rbind(dft, slow_start, go_dutch)
library(ggplot2)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2018, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none")
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2019.5, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none")
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, fill = mode)) + scale_fill_brewer(type = "qual") + xlab("Miles") + ylab("Number of trips") + theme_classic()
ggplot(ssam[ ssam$sd < 300, ]) + geom_histogram(aes(x = sd/10, fill = mode)) + scale_fill_brewer(type = "qual") + xlab("Miles") + ylab("Number of trips") + theme_classic()
ggsave("figures/distance-distribution.png")
grid.raster(readPNG("figures/distance-distribution.png"))
levels(tsam$mode)
tsam$epkm <- 0
tsam$epkm[ grep("driv", tsam$mode)  ] <- 0.203
tsam$epkm[ grep("rail", tsam$mode)  ] <- 0.05818
tsam$epkm[ grep("Bus", tsam$mode)  ] <- 0.11195
tsam$esave <- tsam$epkm * tsam$dkm
summary(tsam$mode != "Bicycle" & tsam$dswitch_2025_go == "Bicycle"])
summary(tsam$mode != "Bicycle" & tsam$dswitch_2025_go == "Bicycle")
summary(!tsam$mode != "Bicycle" & tsam$dswitch_2025_go == "Bicycle")
summary(!(tsam$mode != "Bicycle" & tsam$dswitch_2025_go == "Bicycle"))
tsam$esave[!(tsam$mode != "Bicycle" & tsam$dswitch_2025_go == "Bicycle")] <- 0
tsam$esave_2025_go[!(tsam$mode != "Bicycle" & tsam$dswitch_2025_go == "Bicycle")] <- 0
tsam$esave_2025_go <- tsam$epkm * tsam$dkm
# Set the values of modes that haven't changed to 0
tsam$esave_2025_go[!(tsam$mode != "Bicycle" & tsam$dswitch_2025_go == "Bicycle")] <- 0
sum(tsam$esave_2025_go)
save1 <- sum(tsam$esave_2025_go) # the total emissions savings of these trips
nrow(ind_all)
length(ind_ids)
save1 * 52 / length(ind_ids)
tsam$esave_2050_go <- tsam$epkm * tsam$dkm
tsam$esave_2050_go[!(tsam$mode != "Bicycle" & tsam$dswitch_2050_go == "Bicycle")] <- 0
sum(tsam$esave_2025_go) * 52 / length(ind_ids)
sum(tsam$esave_2050_go) * 52 / length(ind_ids)
read.csv("input-data/ghg-ems.csv")
ghgs <- read.csv("input-data/ghg-ems.csv")
ghgs[,2:5]
ghgs[,2:6]
"input-data/ghg-ems.csv"
ghgs[c(3, 7),2:6]
ghgs[c(3, 7),3:6]
ghgs <- read.csv("input-data/ghg-ems.csv")[c(3, 7),3:6]
ghgs <- rbind(c(211.9, 0.3, 1.3, 213.5), ghgs)
ghgs <- read.csv("input-data/ghg-ems.csv")[c(3, 7),3:6]
ghgs <- rbind(c(211.9, 0.3, 1.3, 213.5), ghgs)
ghgs <- read.csv("input-data/ghg-ems.csv")[c(3, 7),3:6]
ghgs
ghgs <- rbind(c(211.9, 0.3, 1.3, 213.5), ghgs)
ghgs <- apply(ghgs, 2, as.numeric)
ghgs
ghgs <- rbind(c(211.9, 0.3, 1.3, 213.5), ghgs)
ghgs <- rbind(c(247.2, 0.1, 1.8, 249.0), ghgs)
ghgs
ghgs <- read.csv("input-data/ghg-ems.csv")[c(3, 7),3:6]
ghgs <- apply(ghgs, 2, as.numeric)
ghgs
ghgs <- rbind(c(211.9, 0.3, 1.3, 213.5), ghgs)
ghgs
ghgs <- rbind(c(247.2, 0.1, 1.8, 249.0), ghgs)
ghgs
read.csv("input-data/ghg-ems.csv")[c(3, 7),3:6]
ghgs <- read.csv("input-data/ghg-ems.csv")[c(3, 7),3:6]
ghgs <- apply(ghgs, 2, as.numeric)
ghgs <- ghgs * 1000
ghgs
ghgs <- rbind(c(211.9, 0.3, 1.3, 213.5), ghgs)
ghgs <- rbind(c(247.2, 0.1, 1.8, 249.0), ghgs)
ghgs
ghgs <- data.frame(ghgs)
ghgs
nmot <- read.csv("input-data/ghg-ems.csv")[c(3, 7),2]
nmot
nmot <- character(read.csv("input-data/ghg-ems.csv")[c(3, 7),2])
nmot <- as.character(read.csv("input-data/ghg-ems.csv")[c(3, 7),2])
nmot <- as.character(read.csv("input-data/ghg-ems.csv")[c(3, 7),2])
nmot <- c("Car (average)", "Diesel (average)", "Petrol (average)", nmot)
nmot
cbind(nmot, ghgs)
ghgs <- read.csv("input-data/ghg-ems.csv")[c(3, 7),3:6]
ghgs <- apply(ghgs, 2, as.numeric)
ghgs <- ghgs * 1000
ghgs <- rbind(c(211.9, 0.3, 1.3, 213.5), ghgs)
ghgs <- rbind(c(247.2, 0.1, 1.8, 249.0), ghgs)
ghgs <- rbind(c(245.4, 0.1, 1.8, 247.2), ghgs)
ghgs <- data.frame(ghgs)
nmot <- as.character(read.csv("input-data/ghg-ems.csv")[c(3, 7),2])
nmot <- c("Car (average)", "Diesel (average)", "Petrol (average)", nmot)
ghgs <- cbind(nmot, ghgs)
ghgs
ghgs <- read.csv("input-data/ghg-ems.csv")[c(3, 7),3:6]
ghgs <- apply(ghgs, 2, as.numeric)
ghgs <- ghgs * 1000
ghgs <- rbind(c(211.9, 0.3, 1.3, 213.5), ghgs)
ghgs <- rbind(c(247.2, 0.1, 1.8, 249.0), ghgs)
ghgs <- rbind(c(245.4, 0.1, 1.8, 247.2), ghgs)
ghgs <- data.frame(ghgs)
nmot <- as.character(read.csv("input-data/ghg-ems.csv")[c(3, 7),2])
nmot <- c("Car (average)", "Car (diesel)", "Petrol (petrol)", nmot)
ghgs <- cbind(Mode = nmot, ghgs)
names(ghgs)
names(ghgs)[5] <- "CO2e"
library(knitr)
kable(ghgs)
save1 <- sum(tsam$esave_2025_go) # the total emissions savings of these trips
save1 * 52 / length(ind_ids) # savings per person per year
sum(tsam$esave_2050_go) * 52 / length(ind_ids)
91.2/ 10600
16.1 * 58000
58.4 * 10^6 * 0.016.1
58.4 * 10^6 * 0.0161
18 * 940000
18 * 940000 / 1000000
58.4 * 10^6 * 0.0912
5326080 * 18 / 1000000
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2019.5, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none")
library(ggplot2)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2019.5, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none")
ggsave("figures/stages.png")
grid.raster(readPNG("figures/future-modes.png"))
qplot(data = modes, x = Mode, y = Percentage, fill = Scenario, geom = "bar", stat = "identity", position = "dodge")  + theme_classic() + theme(axis.text.x = element_text(angle = 10)) # plot of mode split - refine + add
modes$Scenario[ grepl("25", modes$Scenario)]
modes$Scenario[ grepl("25", modes$Scenario)] <- "Go Dutch (2025)"
modes$Scenario <- as.character(modes$Scenario)
modes$Scenario[ grepl("25", modes$Scenario)] <- "Go Dutch (2025)"
modes$Scenario[ grepl("50", modes$Scenario)] <- "Go Dutch (2050)"
modes$Percentage <- modes$Percentage * 100
qplot(data = modes, x = Mode, y = Percentage, fill = Scenario, geom = "bar", stat = "identity", position = "dodge")  + theme_classic() + theme(axis.text.x = element_text(angle = 10)) # plot of mode split - refine + add
modes$Scenario
modes <- data.frame(Mode = names(modes), Current = modes,  Go_Dutch_2025 = as.numeric(summary(tsam$dswitch_2025_go) / nrow(tsam)), Go_Dutch_2050 = as.numeric(summary(tsam$dswitch_2050_go) / nrow(tsam)))
modes <- melt(modes)
names(modes) <- c("Mode", "Scenario", "Percentage")
modes$Scenario <- as.character(modes$Scenario)
modes$Scenario[ grepl("25", modes$Scenario)] <- "Go Dutch (2025)"
modes$Scenario[ grepl("50", modes$Scenario)] <- "Go Dutch (2050)"
modes$Percentage <- modes$Percentage * 100
qplot(data = modes, x = Mode, y = Percentage, fill = Scenario, geom = "bar", stat = "identity", position = "dodge")  + theme_classic() + theme(axis.text.x = element_text(angle = 10)) # plot of mode split - refine + add
modes <- summary(tsam$mode) / nrow(tsam)
modes <- data.frame(Mode = names(modes), Current = modes,  Go_Dutch_2025 = as.numeric(summary(tsam$dswitch_2025_go) / nrow(tsam)), Go_Dutch_2050 = as.numeric(summary(tsam$dswitch_2050_go) / nrow(tsam)))
modes <- melt(modes)
names(modes) <- c("Mode", "Scenario", "Percentage")
modes$Scenario <- as.character(modes$Scenario)
modes$Scenario[ grepl("25", modes$Scenario)] <- "Go Dutch (2025)"
modes$Scenario[ grepl("50", modes$Scenario)] <- "Go Dutch (2050)"
modes$Percentage <- modes$Percentage * 100
qplot(data = modes, x = Mode, y = Percentage, fill = Scenario, geom = "bar", stat = "identity", position = "dodge")  + theme_classic() + theme(axis.text.x = element_text(angle = 10)) # plot of mode split - refine + add
library(reshape2)
modes <- summary(tsam$mode) / nrow(tsam)
modes <- data.frame(Mode = names(modes), Current = modes,  Go_Dutch_2025 = as.numeric(summary(tsam$dswitch_2025_go) / nrow(tsam)), Go_Dutch_2050 = as.numeric(summary(tsam$dswitch_2050_go) / nrow(tsam)))
modes <- melt(modes)
names(modes) <- c("Mode", "Scenario", "Percentage")
modes$Scenario <- as.character(modes$Scenario)
modes$Scenario[ grepl("25", modes$Scenario)] <- "Go Dutch (2025)"
modes$Scenario[ grepl("50", modes$Scenario)] <- "Go Dutch (2050)"
modes$Percentage <- modes$Percentage * 100
qplot(data = modes, x = Mode, y = Percentage, fill = Scenario, geom = "bar", stat = "identity", position = "dodge")  + theme_classic() + theme(axis.text.x = element_text(angle = 10)) # plot of mode split - refine + add
ggsave("figures/future-modes.png")
read.csv("input-data/health-savings-1.ods")
read.csv("output-data/health-savings-1.c")
read.csv("output-data/health-savings-1.csv")
read.csv("output-data/health-savings-1.csv", header = T)
read.csv("output-data/health-savings-1.csv", header = T)
kable(read.csv("output-data/health-savings-1.csv", header = T))
library(knitr)
kable(read.csv("output-data/health-savings-1.csv", header = T))
s2050
kable(read.csv("output-data/health-savings-1.csv", header = T) / 1000)
library(knitr)
kable(read.csv("output-data/health-savings-1.csv", header = T) / 1000)
health_save <- read.csv("output-data/health-savings-1.csv", header = T)
health_save
health_save[2:5, 2:5]
health_save[2:10, 2:5]
health_save[2:10, 2:5] <- as.numeric(health_save[2:10, 2:5])/1000
as.numeric(health_save[2:10, 2:5])
tapply(health_save[2:10, 2:5], 2, function(x) as.numeric(x) / 1000)
health_save[2:10, 2:5] <- apply(health_save[2:10, 2:5], 2, function(x) as.numeric(x) / 1000)
apply(health_save[2:10, 2:5], 2, function(x) as.numeric(x) / 1000)
as.numeric(health_save[2, 2:5])
as.numeric(as.character(health_save[2, 2:5]))
as.numeric(as.character(health_save[2:10,5]))
as.character(health_save[2:10,5])
health_save <- read.csv("output-data/health-savings-1.csv", header = T)
apply(health_save[2:10, 2:5], 2, function(x) as.numeric(x) / 1000)
health_save[2:10, 2:5] <- apply(health_save[2:10, 2:5], 2, function(x) round(as.numeric(x) / 1000))
health_save
health_save[2:10, 2:5]
health_save <- read.csv("output-data/health-savings-1.csv", header = T)
health_save[2:10, 2:5] <- apply(health_save[2:10, 2:5], 2, function(x) round(as.numeric(x) / 1000))
health_save[2:10, 2:5]
health_save <- read.csv("output-data/health-savings-1.csv", header = T)
health_save[2:10, 2:5] <- apply(health_save[2:10, 2:5], 2, function(x) as.numeric(x) / 1000)
health_save
health_save <- read.csv("output-data/health-savings-1.csv", header = T)
health_save <- read.csv("output-data/health-savings-1.csv", header = T, stringsAsFactors=FALSE)
health_save[2:10, 2:5] <- apply(health_save[2:10, 2:5], 2, function(x) as.numeric(x) / 1000)
apply(health_save[2:10, 2:5], 2, function(x) as.numeric(x) / 1000)
health_save[2:10, 2:5]
health_save <- read.csv("output-data/health-savings-1.csv", header = T, stringsAsFactors=FALSE)
health_save[2:10, 2:5] <- apply(health_save[2:10, 2:5], 2, function(x) round(as.numeric(x) / 1000))
health_save
names(health_save)
kable(read.csv("output-data/health-savings-1.csv", header = T))
health_save <- read.csv("output-data/health-savings-1.csv", header = T, stringsAsFactors=FALSE)
health_save[2:10, 2:5] <- apply(health_save[2:10, 2:5], 2, function(x) round(as.numeric(x) / 1000))
health_save
kable(read.csv("output-data/health-savings-1.csv", header = T))
kable(health_save)
library(ggplot2)
ggplot() + geom_vline(xintercept = c(2025, 2050), linetype = 3) + geom_hline(yintercept = c(10, 25), linetype = 2) + geom_line(data = s2050, aes(x = Year, y = Perc_stages, color = Scenario, linetype = Scenario)) + ylab("Percentage of trips by bicycle") +  theme_bw() + scale_color_brewer(type = "qual", palette = 6, name = "Model") + scale_shape_discrete(name = "Data", solid = F) + geom_text(aes(2020, py, label = ptext), size = 4) +
scale_linetype_manual(values = c(1,1,1,2), guide = "none")
plot(pswitch, tsam$dkm)
plot(pswitch[1:1000], tsam$dkm[1:1000])
plot(tsam$dkm[1:1000], pswitch[1:1000], xlim = c(0,20))
names(ind)
summary(ind$employ)
nrow(ind)
sum(!ind_nocycle) / nrow(tsam) # roughly 20% of trips are not cyclable, in line with 20% people
sample(x = 1:10, size = 3)
sample(x = 1:10, size = 3)
sample(x = 1:10, size = 3)
sample(x = 1:10, size = 3)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
sample(x = 1:10, size = 3, prob = 1:10)
head(sel)
